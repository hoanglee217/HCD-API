{{#meta}}
output: src/Hcd/@Test/Hcd.Host.Test/Tests/{{Module}}/{{Entities}}/{{Entity}}DeleteTests.cs
enable: {{useIntegrationTests}}
{{/meta}}
using Hcd.Host.Test.Factories;
using Hcd.Host.Test.Factories.{{Module}};
using Hcd.Host.Test.Setup;
using Esg.Shared.Test.Integration;

namespace Hcd.Host.Test.Tests.{{Module}}.{{Entities}};

public class {{Entity}}DeleteTests(WebApplication<{{App}}AppFactory, Program> app) : {{App}}Test(app)
{
    private const string _endpoint = "/api/v1/{{param entities}}";

    [Fact]
    public async Task ShouldDeleteCorrectly()
    {
        var factory = new {{Entity}}Factory(AuthenticatedClient);
        var new{{Entity}} = await factory.Create();

        var deleteResponse = await AuthenticatedClient.DeleteAsync($"{_endpoint}/{new{{Entity}}.Id}");
        deleteResponse.EnsureSuccessStatusCode();

        // Check status code
        Assert.Equal(System.Net.HttpStatusCode.OK, deleteResponse.StatusCode);

        // Check if deleted
        var getOneResponse = await AuthenticatedClient.GetAsync($"{_endpoint}/{new{{Entity}}.Id}");
        Assert.Equal(System.Net.HttpStatusCode.NotFound, getOneResponse.StatusCode);
    }
}